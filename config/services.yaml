# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
#    users_profile_images_directory: '%kernel.project_dir%/public/uploads/users_profile_images'
#    uploads_directory: '%kernel.project_dir%/public/uploads'
#    usersDirectory: '%users%'
    uploadsDirectory: '%kernel.project_dir%/public/uploads'


services:
    # default configuration for services in *this* file
    _defaults:
        bind:
#            usersDirectory: '%users%'
#            uploads_directory: '%kernel.project_dir%/public/uploads'

        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.



    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\State\UserPasswordHasher:
        bind:
            $processor: '@api_platform.doctrine.orm.state.persist_processor'

    App\Services\UploaderService:
        arguments:
            $env: '%env(APP_ENV)%'
            $uploadsDirectory: '%kernel.project_dir%/public/uploads'

    Aws\S3\S3Client:
        arguments:
            $args:
                version: 'latest'
                region: 'eu-central-1'
                credentials:
                    key: '%env(AWS_ACCESS_KEY)%'
                    secret: '%env(AWS_SECRET_KEY)%'

    App\Purger\CustomPurgerFactory:
        tags:
            - { name: 'doctrine.fixtures.purger_factory', alias: 'my_purger' }

    App\EventListener\JWTCreatedListener:
        arguments:
            $requestStack: '@request_stack'
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_created', method: 'onJWTCreated' }


    'App\State\UserPatchProcessor':
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $fileUploader: '@App\Services\UploaderService'
            $requestStack: '@request_stack'
        tags:
            - { name: 'api_platform.state_processor', resource_class: 'App\Entity\User', operation: 'patch' }